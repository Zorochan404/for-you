{"ast":null,"code":"var _jsxFileName = \"/home/zoro/Projects/for-you/components/SearchedSong.js\",\n  _this = this;\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\nimport { Image } from 'expo-image';\nimport { useDispatch } from 'react-redux';\nimport { setSong } from '../features/searchSlice';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SearchedSong = function SearchedSong(_ref) {\n  var id = _ref.id,\n    playlistId = _ref.playlistId,\n    thumbnail = _ref.thumbnail,\n    title = _ref.title,\n    uploaderName = _ref.uploaderName,\n    duration = _ref.duration,\n    uploaderUrl = _ref.uploaderUrl;\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n  var handleSong = function handleSong() {\n    dispatch(setSong({\n      id: id,\n      playlistId: playlistId,\n      title: title,\n      thumbnail: thumbnail,\n      uploaderName: uploaderName,\n      uploaderUrl: uploaderUrl,\n      duration: duration\n    }));\n    navigation.navigate('song');\n  };\n  return _jsxDEV(View, {\n    children: _jsxDEV(TouchableOpacity, {\n      onPress: handleSong,\n      children: _jsxDEV(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginTop: 20\n        },\n        children: [_jsxDEV(Image, {\n          style: {\n            width: 70,\n            height: 70,\n            marginRight: 10\n          },\n          source: {\n            uri: thumbnail\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, _this), _jsxDEV(View, {\n          style: {\n            flexDirection: \"column\"\n          },\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\"\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                fontSize: 15\n              },\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 9\n            }, _this), _jsxDEV(Text, {\n              style: {\n                marginLeft: 20\n              },\n              children: duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, _this), _jsxDEV(Text, {\n            style: {\n              fontSize: 12\n            },\n            children: uploaderName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\nexport default SearchedSong;","map":{"version":3,"names":["React","Image","useDispatch","setSong","useNavigation","jsxDEV","_jsxDEV","SearchedSong","_ref","id","playlistId","thumbnail","title","uploaderName","duration","uploaderUrl","dispatch","navigation","handleSong","navigate","View","children","TouchableOpacity","onPress","style","flexDirection","alignItems","marginTop","width","height","marginRight","source","uri","fileName","_jsxFileName","lineNumber","columnNumber","_this","Text","fontSize","marginLeft"],"sources":["/home/zoro/Projects/for-you/components/SearchedSong.js"],"sourcesContent":["import { View, Text, TouchableOpacity } from 'react-native'\nimport React from 'react'\nimport { Image } from 'expo-image';\nimport { useDispatch } from 'react-redux';\nimport { setSong } from '../features/searchSlice';\nimport { useNavigation } from '@react-navigation/native';\n\n\nconst SearchedSong = ({id, playlistId, thumbnail, title, uploaderName, duration, uploaderUrl}) => {\n    const dispatch = useDispatch()\n\n\n\n    const navigation = useNavigation()\n\n\n    const handleSong = () => {\n        dispatch(setSong({\n            id,\n            playlistId,\n            title,\n            thumbnail,\n            uploaderName,\n            uploaderUrl,\n            duration,\n          }))\n          navigation.navigate('song')\n    }\n\n\n  return (\n    <View>\n        <TouchableOpacity onPress={handleSong}>\n         <View style={{flexDirection: \"row\", alignItems: \"center\", marginTop: 20}}>\n         \n    <Image style={{ width: 70, height: 70, marginRight: 10 }} source={{uri: thumbnail}}/>\n    <View style={{flexDirection: \"column\"}}>\n        <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\n        <Text style={{fontSize: 15}}>\n        {title}\n       \n      </Text>\n      <Text style={{marginLeft: 20}}>\n            {duration}\n        </Text>\n        </View>\n      \n        <Text style={{fontSize: 12}}>\n            {uploaderName}\n        </Text>\n        </View>\n      </View>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nexport default SearchedSong"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}