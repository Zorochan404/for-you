{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/zoro/Projects/for-you/components/SearchBar.js\",\n  _this = this;\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport GlobalStyles from \"../GlobalStyles\";\nimport SearchedSong from \"./SearchedSong\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SearchBar = function SearchBar() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchText = _useState2[0],\n    setSearchText = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchResults = _useState4[0],\n    setSearchResults = _useState4[1];\n  var navigation = useNavigation();\n  var handleSearch = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var url = `https://beatbump.io/api/v1/search.json?q=${searchText}&filter=songs`;\n      console.log(url);\n      yield fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'text/plain',\n          \"Connection\": \"keep-alive\",\n          \"User-Agent\": \"MY-UA-STRING\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (apiResponse) {\n        var formattedResults = apiResponse.results[0].contents.map(function (item) {\n          return {\n            id: item.videoId,\n            playlistId: item.playlistId,\n            thumbnail: item.thumbnails[0].url,\n            title: item.title,\n            uploaderName: item.artistInfo.artist[0].text,\n            duration: item.subtitle[item.subtitle.length - 1].text\n          };\n        });\n        setSearchResults(formattedResults);\n        console.log(formattedResults);\n      }).catch(function (error) {\n        console.error('Error fetching search results:', error);\n      });\n    });\n    return function handleSearch() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleItemClick = function handleItemClick(item) {\n    navigation.navigate('song', {\n      songData: item\n    });\n    console.log('Clicked item:', item);\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(Text, {\n      style: {\n        textAlign: \"center\",\n        fontSize: 20\n      },\n      children: \"ForU\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        margin: 10,\n        padding: 5,\n        backgroundColor: \"#d3d3d3\",\n        borderRadius: 5\n      },\n      children: [_jsxDEV(TextInput, {\n        placeholder: \"Search music...\",\n        keyboardType: \"default\",\n        value: searchText,\n        onChangeText: function onChangeText(text) {\n          return setSearchText(text);\n        },\n        style: {\n          flex: 1,\n          marginLeft: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        onPress: handleSearch,\n        children: _jsxDEV(Text, {\n          style: {\n            backgroundColor: \"black\",\n            color: \"white\",\n            padding: 8,\n            borderRadius: 5\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, _this), _jsxDEV(ScrollView, {\n      contentContainerStyle: {\n        paddingBottom: 50,\n        marginHorizontal: 15\n      },\n      children: searchResults == null ? void 0 : searchResults.map(function (song) {\n        return _jsxDEV(SearchedSong, {\n          id: song.id,\n          playlistId: song.playlistId,\n          thumbnail: song.thumbnail,\n          title: song.title,\n          uploaderName: song.uploaderName,\n          duration: song.duration,\n          onPress: function onPress() {\n            return handleItemClick(song);\n          }\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, _this);\n};\nexport default SearchBar;","map":{"version":3,"names":["useNavigation","React","useState","View","Text","TextInput","Button","FlatList","Image","TouchableOpacity","ScrollView","SafeAreaView","GlobalStyles","SearchedSong","jsxDEV","_jsxDEV","SearchBar","_useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","searchResults","setSearchResults","navigation","handleSearch","_ref","_asyncToGenerator","url","console","log","fetch","method","headers","then","res","json","apiResponse","formattedResults","results","contents","map","item","id","videoId","playlistId","thumbnail","thumbnails","title","uploaderName","artistInfo","artist","text","duration","subtitle","length","catch","error","apply","arguments","handleItemClick","navigate","songData","children","style","textAlign","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_this","display","flexDirection","alignItems","margin","padding","backgroundColor","borderRadius","placeholder","keyboardType","value","onChangeText","flex","marginLeft","onPress","color","contentContainerStyle","paddingBottom","marginHorizontal","song"],"sources":["/home/zoro/Projects/for-you/components/SearchBar.js"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\nimport React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  Button,\n  FlatList,\n  Image,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport GlobalStyles from \"../GlobalStyles\";\nimport SearchedSong from \"./SearchedSong\";\n\nconst SearchBar = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const navigation = useNavigation();\n\n  const handleSearch = async () => {\n    const url = `https://beatbump.io/api/v1/search.json?q=${searchText}&filter=songs`;\n    console.log(url);\n    await fetch(url, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'text/plain',\n            \"Connection\": \"keep-alive\",\n            \"User-Agent\": \"MY-UA-STRING\"\n        }\n    })\n    .then(res => res.json())\n    .then((apiResponse) => {\n        const formattedResults = apiResponse.results[0].contents.map(item => ({\n            id: item.videoId,\n            playlistId: item.playlistId,\n            thumbnail: item.thumbnails[0].url,\n            title: item.title,\n            uploaderName: item.artistInfo.artist[0].text,\n            duration: item.subtitle[item.subtitle.length-1].text\n        }));\n        setSearchResults(formattedResults);\n        console.log(formattedResults)\n        \n    })\n    .catch((error) => {\n        console.error('Error fetching search results:', error);\n    });\n};\n\n\n\n\n\n\n\nconst handleItemClick = (item) => {\n    navigation.navigate('song', { songData: item })\n    console.log('Clicked item:', item);\n};\n\n\n  return (\n    <View>\n      <Text\n        style={{\n          textAlign: \"center\",\n          fontSize: 20,\n        }}\n      >\n        ForU\n      </Text>\n      <View\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          margin: 10,\n          padding: 5,\n          backgroundColor: \"#d3d3d3\",\n          borderRadius: 5,\n        }}\n      >\n        <TextInput\n          placeholder=\"Search music...\"\n          keyboardType=\"default\"\n          value={searchText}\n          onChangeText={(text) => setSearchText(text)}\n          style={{ flex: 1, marginLeft: 10 }}\n        />\n        <TouchableOpacity onPress={handleSearch}>\n          <Text\n            style={{\n              backgroundColor: \"black\",\n              color: \"white\",\n              padding: 8,\n              borderRadius: 5,\n            }}\n          >\n            Search\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <ScrollView\n        contentContainerStyle={{ paddingBottom: 50, marginHorizontal: 15 }}\n      >\n        {searchResults?.map((song) => (\n          <SearchedSong\n            key={song.id}\n            id={song.id}\n            playlistId={song.playlistId}\n            thumbnail={song.thumbnail}\n            title={song.title}\n            uploaderName={song.uploaderName}\n            // uploaderUrl={song.uploaderUrl}\n            duration={song.duration}\n            onPress={() => handleItemClick(song)}\n          />\n        ))}\n      </ScrollView>\n    </View>\n  );\n    \n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}