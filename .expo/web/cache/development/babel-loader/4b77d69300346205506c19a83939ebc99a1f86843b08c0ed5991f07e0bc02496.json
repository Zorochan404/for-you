{"ast":null,"code":"import { isBlurhashString } from '../utils/resolveSources';\nexport function getImageWrapperEventHandler(events, source) {\n  return {\n    onLoad: function onLoad(event) {\n      if (typeof window !== 'undefined') {\n        window.requestAnimationFrame(function () {\n          var _events$onLoad;\n          events == null ? void 0 : (_events$onLoad = events.onLoad) == null ? void 0 : _events$onLoad.forEach(function (e) {\n            return e == null ? void 0 : e(event);\n          });\n        });\n      } else {\n        var _events$onLoad2;\n        events == null ? void 0 : (_events$onLoad2 = events.onLoad) == null ? void 0 : _events$onLoad2.forEach(function (e) {\n          return e == null ? void 0 : e(event);\n        });\n      }\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var _events$onTransitionE;\n      return events == null ? void 0 : (_events$onTransitionE = events.onTransitionEnd) == null ? void 0 : _events$onTransitionE.forEach(function (e) {\n        return e == null ? void 0 : e();\n      });\n    },\n    onError: function onError() {\n      var _events$onError;\n      if (source != null && source.uri && isBlurhashString(source == null ? void 0 : source.uri)) {\n        return;\n      }\n      events == null ? void 0 : (_events$onError = events.onError) == null ? void 0 : _events$onError.forEach(function (e) {\n        return e == null ? void 0 : e({\n          source: source || null\n        });\n      });\n    }\n  };\n}","map":{"version":3,"names":["isBlurhashString","getImageWrapperEventHandler","events","source","onLoad","event","window","requestAnimationFrame","_events$onLoad","forEach","e","_events$onLoad2","onTransitionEnd","_events$onTransitionE","onError","_events$onError","uri"],"sources":["/home/zoro/Projects/for-you/node_modules/expo-image/src/web/getImageWrapperEventHandler.ts"],"sourcesContent":["import { ImageWrapperEvents } from './ImageWrapper.types';\nimport { ImageSource } from '../Image.types';\nimport { isBlurhashString } from '../utils/resolveSources';\n\nexport function getImageWrapperEventHandler(\n  events: ImageWrapperEvents | undefined,\n  source: ImageSource\n) {\n  return {\n    onLoad: (event) => {\n      if (typeof window !== 'undefined') {\n        // this ensures the animation will run, since the starting class is applied at least 1 frame before the target class set in the onLoad event callback\n        window.requestAnimationFrame(() => {\n          events?.onLoad?.forEach((e) => e?.(event));\n        });\n      } else {\n        events?.onLoad?.forEach((e) => e?.(event));\n      }\n    },\n    onTransitionEnd: () => events?.onTransitionEnd?.forEach((e) => e?.()),\n    onError: () => {\n      // A temporary workaround for blurhash blobs throwing opaque errors when used in an img tag.\n      if (source?.uri && isBlurhashString(source?.uri)) {\n        return;\n      }\n      events?.onError?.forEach((e) => e?.({ source: source || null }));\n    },\n  };\n}\n"],"mappings":"AAEA,SAASA,gBAAgB,QAAQ,yBAAyB;AAE1D,OAAM,SAAUC,2BAA2BA,CACzCC,MAAsC,EACtCC,MAAmB;EAEnB,OAAO;IACLC,MAAM,EAAE,SAAAA,OAACC,KAAK,EAAI;MAChB,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;QAEjCA,MAAM,CAACC,qBAAqB,CAAC,YAAK;UAAA,IAAAC,cAAA;UAChCN,MAAM,qBAAAM,cAAA,GAANN,MAAM,CAAEE,MAAM,qBAAdI,cAAA,CAAgBC,OAAO,CAAC,UAACC,CAAC;YAAA,OAAKA,CAAC,oBAADA,CAAC,CAAGL,KAAK,CAAC;UAAA,EAAC;QAC5C,CAAC,CAAC;OACH,MAAM;QAAA,IAAAM,eAAA;QACLT,MAAM,qBAAAS,eAAA,GAANT,MAAM,CAAEE,MAAM,qBAAdO,eAAA,CAAgBF,OAAO,CAAC,UAACC,CAAC;UAAA,OAAKA,CAAC,oBAADA,CAAC,CAAGL,KAAK,CAAC;QAAA,EAAC;;IAE9C,CAAC;IACDO,eAAe,EAAE,SAAAA,gBAAA;MAAA,IAAAC,qBAAA;MAAA,OAAMX,MAAM,qBAAAW,qBAAA,GAANX,MAAM,CAAEU,eAAe,qBAAvBC,qBAAA,CAAyBJ,OAAO,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,oBAADA,CAAC,CAAE,CAAE;MAAA,EAAC;IAAA;IACrEI,OAAO,EAAE,SAAAA,QAAA,EAAK;MAAA,IAAAC,eAAA;MAEZ,IAAIZ,MAAM,YAANA,MAAM,CAAEa,GAAG,IAAIhB,gBAAgB,CAACG,MAAM,oBAANA,MAAM,CAAEa,GAAG,CAAC,EAAE;QAChD;;MAEFd,MAAM,qBAAAa,eAAA,GAANb,MAAM,CAAEY,OAAO,qBAAfC,eAAA,CAAiBN,OAAO,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,oBAADA,CAAC,CAAG;UAAEP,MAAM,EAAEA,MAAM,IAAI;QAAI,CAAE,CAAC;MAAA,EAAC;IAClE;GACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}