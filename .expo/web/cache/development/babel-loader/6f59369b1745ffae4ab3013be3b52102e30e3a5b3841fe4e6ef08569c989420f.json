{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"style\", \"source\", \"placeholder\", \"contentFit\", \"contentPosition\", \"transition\", \"fadeDuration\", \"resizeMode\", \"defaultSource\", \"loadingIndicatorSource\"],\n  _excluded2 = [\"resizeMode\"];\nvar _jsxFileName = \"/home/zoro/Projects/for-you/node_modules/expo-image/build/Image.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ExpoImage, { ExpoImageModule } from './ExpoImage';\nimport { resolveContentFit, resolveContentPosition, resolveTransition } from './utils';\nimport { resolveSources } from './utils/resolveSources';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar loggedDefaultSourceDeprecationWarning = false;\nexport var Image = function (_React$PureComponent) {\n  _inherits(Image, _React$PureComponent);\n  function Image(props) {\n    var _this;\n    _classCallCheck(this, Image);\n    _this = _callSuper(this, Image, [props]);\n    _this.nativeViewRef = React.createRef();\n    return _this;\n  }\n  _createClass(Image, [{\n    key: \"startAnimating\",\n    value: (function () {\n      var _startAnimating = _asyncToGenerator(function* () {\n        yield this.nativeViewRef.current.startAnimating();\n      });\n      function startAnimating() {\n        return _startAnimating.apply(this, arguments);\n      }\n      return startAnimating;\n    }())\n  }, {\n    key: \"stopAnimating\",\n    value: (function () {\n      var _stopAnimating = _asyncToGenerator(function* () {\n        yield this.nativeViewRef.current.stopAnimating();\n      });\n      function stopAnimating() {\n        return _stopAnimating.apply(this, arguments);\n      }\n      return stopAnimating;\n    }())\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _ref2;\n      var _this$props = this.props,\n        style = _this$props.style,\n        source = _this$props.source,\n        placeholder = _this$props.placeholder,\n        contentFit = _this$props.contentFit,\n        contentPosition = _this$props.contentPosition,\n        transition = _this$props.transition,\n        fadeDuration = _this$props.fadeDuration,\n        resizeModeProp = _this$props.resizeMode,\n        defaultSource = _this$props.defaultSource,\n        loadingIndicatorSource = _this$props.loadingIndicatorSource,\n        restProps = _objectWithoutProperties(_this$props, _excluded);\n      var _ref = StyleSheet.flatten(style) || {},\n        resizeModeStyle = _ref.resizeMode,\n        restStyle = _objectWithoutProperties(_ref, _excluded2);\n      var resizeMode = resizeModeProp != null ? resizeModeProp : resizeModeStyle;\n      if ((defaultSource || loadingIndicatorSource) && !loggedDefaultSourceDeprecationWarning) {\n        console.warn('[expo-image]: `defaultSource` and `loadingIndicatorSource` props are deprecated, use `placeholder` instead');\n        loggedDefaultSourceDeprecationWarning = true;\n      }\n      return _jsxDEV(ExpoImage, _objectSpread(_objectSpread({}, restProps), {}, {\n        style: restStyle,\n        source: resolveSources(source),\n        placeholder: resolveSources((_ref2 = placeholder != null ? placeholder : defaultSource) != null ? _ref2 : loadingIndicatorSource),\n        contentFit: resolveContentFit(contentFit, resizeMode),\n        contentPosition: resolveContentPosition(contentPosition),\n        transition: resolveTransition(transition, fadeDuration),\n        nativeViewRef: this.nativeViewRef\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    }\n  }], [{\n    key: \"prefetch\",\n    value: (function () {\n      var _prefetch = _asyncToGenerator(function* (urls) {\n        var cachePolicy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'memory-disk';\n        return ExpoImageModule.prefetch(Array.isArray(urls) ? urls : [urls], cachePolicy);\n      });\n      function prefetch(_x) {\n        return _prefetch.apply(this, arguments);\n      }\n      return prefetch;\n    }())\n  }, {\n    key: \"clearMemoryCache\",\n    value: (function () {\n      var _clearMemoryCache = _asyncToGenerator(function* () {\n        return yield ExpoImageModule.clearMemoryCache();\n      });\n      function clearMemoryCache() {\n        return _clearMemoryCache.apply(this, arguments);\n      }\n      return clearMemoryCache;\n    }())\n  }, {\n    key: \"clearDiskCache\",\n    value: (function () {\n      var _clearDiskCache = _asyncToGenerator(function* () {\n        return yield ExpoImageModule.clearDiskCache();\n      });\n      function clearDiskCache() {\n        return _clearDiskCache.apply(this, arguments);\n      }\n      return clearDiskCache;\n    }())\n  }, {\n    key: \"getCachePathAsync\",\n    value: (function () {\n      var _getCachePathAsync = _asyncToGenerator(function* (cacheKey) {\n        return yield ExpoImageModule.getCachePathAsync(cacheKey);\n      });\n      function getCachePathAsync(_x2) {\n        return _getCachePathAsync.apply(this, arguments);\n      }\n      return getCachePathAsync;\n    }())\n  }]);\n  return Image;\n}(React.PureComponent);","map":{"version":3,"names":["React","StyleSheet","ExpoImage","ExpoImageModule","resolveContentFit","resolveContentPosition","resolveTransition","resolveSources","jsxDEV","_jsxDEV","loggedDefaultSourceDeprecationWarning","Image","_React$PureComponent","_inherits","props","_this","_classCallCheck","_callSuper","nativeViewRef","createRef","_createClass","key","value","_startAnimating","_asyncToGenerator","current","startAnimating","apply","arguments","_stopAnimating","stopAnimating","render","_ref2","_this$props","style","source","placeholder","contentFit","contentPosition","transition","fadeDuration","resizeModeProp","resizeMode","defaultSource","loadingIndicatorSource","restProps","_objectWithoutProperties","_excluded","_ref","flatten","resizeModeStyle","restStyle","_excluded2","console","warn","_objectSpread","fileName","_jsxFileName","lineNumber","columnNumber","_prefetch","urls","cachePolicy","length","undefined","prefetch","Array","isArray","_x","_clearMemoryCache","clearMemoryCache","_clearDiskCache","clearDiskCache","_getCachePathAsync","cacheKey","getCachePathAsync","_x2","PureComponent"],"sources":["/home/zoro/Projects/for-you/node_modules/expo-image/src/Image.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport ExpoImage, { ExpoImageModule } from './ExpoImage';\nimport { ImageProps } from './Image.types';\nimport { resolveContentFit, resolveContentPosition, resolveTransition } from './utils';\nimport { resolveSources } from './utils/resolveSources';\n\nlet loggedDefaultSourceDeprecationWarning = false;\n\nexport class Image extends React.PureComponent<ImageProps> {\n  nativeViewRef;\n\n  constructor(props) {\n    super(props);\n    this.nativeViewRef = React.createRef();\n  }\n\n  /**\n   * Preloads images at the given URLs that can be later used in the image view.\n   * Preloaded images are cached to the memory and disk by default, so make sure\n   * to use `disk` (default) or `memory-disk` [cache policy](#cachepolicy).\n   * @param urls - A URL string or an array of URLs of images to prefetch.\n   * @param cachePolicy - The cache policy for prefetched images.\n   * @return A promise resolving to `true` as soon as all images have been\n   * successfully prefetched. If an image fails to be prefetched, the promise\n   * will immediately resolve to `false` regardless of whether other images have\n   * finished prefetching.\n   */\n  static async prefetch(\n    urls: string | string[],\n    cachePolicy: 'memory-disk' | 'memory' = 'memory-disk'\n  ): Promise<boolean> {\n    return ExpoImageModule.prefetch(Array.isArray(urls) ? urls : [urls], cachePolicy);\n  }\n\n  /**\n   * Asynchronously clears all images stored in memory.\n   * @platform android\n   * @platform ios\n   * @return A promise resolving to `true` when the operation succeeds.\n   * It may resolve to `false` on Android when the activity is no longer available.\n   * Resolves to `false` on Web.\n   */\n  static async clearMemoryCache(): Promise<boolean> {\n    return await ExpoImageModule.clearMemoryCache();\n  }\n\n  /**\n   * Asynchronously clears all images from the disk cache.\n   * @platform android\n   * @platform ios\n   * @return A promise resolving to `true` when the operation succeeds.\n   * It may resolve to `false` on Android when the activity is no longer available.\n   * Resolves to `false` on Web.\n   */\n  static async clearDiskCache(): Promise<boolean> {\n    return await ExpoImageModule.clearDiskCache();\n  }\n\n  /**\n   * Asynchronously checks if an image exists in the disk cache and resolves to\n   * the path of the cached image if it does.\n   * @param cacheKey - The cache key for the requested image. Unless you have set\n   * a custom cache key, this will be the source URL of the image.\n   * @platform android\n   * @platform ios\n   * @return A promise resolving to the path of the cached image. It will resolve\n   * to `null` if the image does not exist in the cache.\n   */\n  static async getCachePathAsync(cacheKey: string): Promise<string | null> {\n    return await ExpoImageModule.getCachePathAsync(cacheKey);\n  }\n\n  /**\n   * Asynchronously starts playback of the view's image if it is animated.\n   * @platform android\n   * @platform ios\n   */\n  async startAnimating(): Promise<void> {\n    await this.nativeViewRef.current.startAnimating();\n  }\n\n  /**\n   * Asynchronously stops the playback of the view's image if it is animated.\n   * @platform android\n   * @platform ios\n   */\n  async stopAnimating(): Promise<void> {\n    await this.nativeViewRef.current.stopAnimating();\n  }\n\n  render() {\n    const {\n      style,\n      source,\n      placeholder,\n      contentFit,\n      contentPosition,\n      transition,\n      fadeDuration,\n      resizeMode: resizeModeProp,\n      defaultSource,\n      loadingIndicatorSource,\n      ...restProps\n    } = this.props;\n\n    const { resizeMode: resizeModeStyle, ...restStyle } = StyleSheet.flatten(style) || {};\n    const resizeMode = resizeModeProp ?? resizeModeStyle;\n\n    if ((defaultSource || loadingIndicatorSource) && !loggedDefaultSourceDeprecationWarning) {\n      console.warn(\n        '[expo-image]: `defaultSource` and `loadingIndicatorSource` props are deprecated, use `placeholder` instead'\n      );\n      loggedDefaultSourceDeprecationWarning = true;\n    }\n\n    return (\n      <ExpoImage\n        {...restProps}\n        style={restStyle}\n        source={resolveSources(source)}\n        placeholder={resolveSources(placeholder ?? defaultSource ?? loadingIndicatorSource)}\n        contentFit={resolveContentFit(contentFit, resizeMode)}\n        contentPosition={resolveContentPosition(contentPosition)}\n        transition={resolveTransition(transition, fadeDuration)}\n        nativeViewRef={this.nativeViewRef}\n      />\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}