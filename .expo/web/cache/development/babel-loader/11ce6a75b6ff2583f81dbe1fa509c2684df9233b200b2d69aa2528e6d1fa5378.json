{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var searchSlice = createSlice({\n  name: 'song',\n  initialState: {\n    song: {\n      url: null,\n      title: null,\n      thumbnail: null,\n      uploaderName: null,\n      uploaderUrl: null,\n      duration: null\n    }\n  },\n  reducers: {\n    setSong: function setSong(state, action) {\n      state.song = action.payload;\n    }\n  }\n});\nexport var setSong = function setSong(songData) {\n  return searchSlice.actions.setSong(songData);\n};\nexport var selectSong = function selectSong(state) {\n  return state.song.song;\n};\nexport var selectBasketItemsWithId = function selectBasketItemsWithId(state, id) {\n  return state.basket.items.filter(function (item) {\n    return item.id === id;\n  });\n};\nexport var totalPrice = function totalPrice(state) {\n  return state.basket.items.reduce(function (total, item) {\n    return total += item.price;\n  }, 0);\n};\nexport default searchSlice.reducer;","map":{"version":3,"names":["createSlice","searchSlice","name","initialState","song","url","title","thumbnail","uploaderName","uploaderUrl","duration","reducers","setSong","state","action","payload","songData","actions","selectSong","selectBasketItemsWithId","id","basket","items","filter","item","totalPrice","reduce","total","price","reducer"],"sources":["/home/zoro/Projects/for-you/features/searchSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const searchSlice = createSlice({\n  name: 'song',\n  initialState: {\n    song:{\n      url: null,\n      title: null,\n      thumbnail: null,\n      uploaderName: null,\n      uploaderUrl: null,\n      duration: null,\n      },\n  },\n  reducers: {\n    setSong: (state, action) => {\n        state.song= action.payload\n    },\n\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const setSong = (songData) => {\n  return searchSlice.actions.setSong(songData);\n};\nexport const selectSong = (state) => state.song.song\n\nexport const selectBasketItemsWithId = (state, id) => state.basket.items.filter((item) => item.id === id);\n\nexport const totalPrice = (state) =>  \n    state.basket.items.reduce((total, item) => total += item.price, 0)\n\n\nexport default searchSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,IAAMC,WAAW,GAAGD,WAAW,CAAC;EACrCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAC;MACHC,GAAG,EAAE,IAAI;MACTC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,IAAI;MACfC,YAAY,EAAE,IAAI;MAClBC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE;IACV;EACJ,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAE,SAAAA,QAACC,KAAK,EAAEC,MAAM,EAAK;MACxBD,KAAK,CAACT,IAAI,GAAEU,MAAM,CAACC,OAAO;IAC9B;EAEF;AACF,CAAC,CAAC;AAGF,OAAO,IAAMH,OAAO,GAAG,SAAVA,OAAOA,CAAII,QAAQ,EAAK;EACnC,OAAOf,WAAW,CAACgB,OAAO,CAACL,OAAO,CAACI,QAAQ,CAAC;AAC9C,CAAC;AACD,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAIL,KAAK;EAAA,OAAKA,KAAK,CAACT,IAAI,CAACA,IAAI;AAAA;AAEpD,OAAO,IAAMe,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIN,KAAK,EAAEO,EAAE;EAAA,OAAKP,KAAK,CAACQ,MAAM,CAACC,KAAK,CAACC,MAAM,CAAC,UAACC,IAAI;IAAA,OAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE;EAAA,EAAC;AAAA;AAEzG,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAUA,CAAIZ,KAAK;EAAA,OAC5BA,KAAK,CAACQ,MAAM,CAACC,KAAK,CAACI,MAAM,CAAC,UAACC,KAAK,EAAEH,IAAI;IAAA,OAAKG,KAAK,IAAIH,IAAI,CAACI,KAAK;EAAA,GAAE,CAAC,CAAC;AAAA;AAGtE,eAAe3B,WAAW,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}